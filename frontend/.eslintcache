[{"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/index.js":"1","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/App.js":"2","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Login__Registration/Login.js":"3","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Census QA/Final.js":"4","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Login__Registration/Registration.js":"5","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Login__Registration/Dashboard/Dashboard.js":"6","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Census QA/CensusQA.js":"7","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Census QA/CensusForm.js":"8","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Footer/Footer.js":"9","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Login__Registration/Dashboard/VoterModel/VoterModel.js":"10","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/ScheduleMeeting/ScheduleMeeting.js":"11","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/GoogleMeetCalendar/GoogleMeetCalendar.js":"12","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Census QA/OnlineMeeting.js":"13","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Census QA/FacialDetector.js":"14","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/CallPage/CallPage.js":"15","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/CallPage/CallPageFooter/CallPageFooter.js":"16","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/CallPage/CallPageHeader/CallPageHeader.js":"17","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/CallPage/MeetingInfo/MeetingInfo.js":"18","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/CallPage/Messenger/Messenger.js":"19","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Reducer/MessageListReducer.js":"20","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/utils/apiRequests.js":"21","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/utils/apiEndPoints.js":"22","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/utils/helpers.js":"23","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/UI/Alert/Alert.js":"24","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/SharedMeetingPage/SharedMeeting.js":"25"},{"size":692,"mtime":1710791126335,"results":"26","hashOfConfig":"27"},{"size":2838,"mtime":1710786814811,"results":"28","hashOfConfig":"27"},{"size":3452,"mtime":1710236571525,"results":"29","hashOfConfig":"27"},{"size":159,"mtime":1710230389625,"results":"30","hashOfConfig":"27"},{"size":3121,"mtime":1710230389630,"results":"31","hashOfConfig":"27"},{"size":1309,"mtime":1710242485132,"results":"32","hashOfConfig":"27"},{"size":3337,"mtime":1710245389417,"results":"33","hashOfConfig":"27"},{"size":1959,"mtime":1710776503088,"results":"34","hashOfConfig":"27"},{"size":523,"mtime":1710242389835,"results":"35","hashOfConfig":"27"},{"size":4993,"mtime":1710242986307,"results":"36","hashOfConfig":"27"},{"size":2163,"mtime":1710255300038,"results":"37","hashOfConfig":"27"},{"size":930,"mtime":1710247902907,"results":"38","hashOfConfig":"27"},{"size":2286,"mtime":1710775139963,"results":"39","hashOfConfig":"27"},{"size":549,"mtime":1710775518951,"results":"40","hashOfConfig":"27"},{"size":8561,"mtime":1710789909110,"results":"41","hashOfConfig":"27"},{"size":2667,"mtime":1710790614972,"results":"42","hashOfConfig":"27"},{"size":1517,"mtime":1710769625035,"results":"43","hashOfConfig":"27"},{"size":1716,"mtime":1710779483134,"results":"44","hashOfConfig":"27"},{"size":2140,"mtime":1710769229859,"results":"45","hashOfConfig":"27"},{"size":268,"mtime":1710767903477,"results":"46","hashOfConfig":"27"},{"size":984,"mtime":1710769768812,"results":"47","hashOfConfig":"27"},{"size":146,"mtime":1710769768811,"results":"48","hashOfConfig":"27"},{"size":118,"mtime":1710769768813,"results":"49","hashOfConfig":"27"},{"size":504,"mtime":1710769827776,"results":"50","hashOfConfig":"27"},{"size":7659,"mtime":1710787614856,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wx5lh0",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/index.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/App.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Login__Registration/Login.js",[],["111","112"],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Census QA/Final.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Login__Registration/Registration.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Login__Registration/Dashboard/Dashboard.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Census QA/CensusQA.js",["113","114"],"import React,{useState,useEffect} from 'react'\nimport {Link} from \"react-router-dom\"\nimport \"./CensusQA.css\"\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Button from '@material-ui/core/Button';\n\nfunction CensusQA() {\n\n    const [firstName,setFirstName]=useState('')\n    const [surName,setSurName]=useState('')\n    const [dob,setDob]=useState('')\n    const [age,setAge]=useState('+254 7')\n    const [idNo,setIdNo]=useState(0)\n    const [certNo,setCertNo]=useState('example@gmail.com')\n    const [aienabled,setAiEnabled]=useState(true)\n\n    const handleSubmit=()=>{\n        postDetails()\n    }\n\n    const postDetails=async()=>{\n        const body =  {firstName,surName,dob,age,idNo,certNo}\n        const response = await fetch(\"/count/dashboard/censusQA\",{\n            method :\"POST\",\n            headers : {\"Content-type\" : \"application/json\"},\n            body : JSON.stringify(body)\n        })\n    }\n\n    useEffect(()=>{\n        postDetails()\n    },[])\n\n    return (\n        <>\n            <div className=\"message__info\">\n            <p>  <WarningIcon  color=\"error\" /> {\"  \"} Please fill the data below before proceeding</p>\n            </div>\n            <h4>Enter Candidates Details</h4>\n            <form className=\"census__Form\">\n                <p>\n                    <label htmlFor=\"first_name\">First Name </label>  \n                    <input id=\"first_name\" type=\"text\" name=\"first_name\" value={firstName}  onChange={ e=>setFirstName(e.target.value)}  required/> \n                </p>\n            \n            <p>\n                <label htmlFor=\"last_name\">Last Name </label>  \n                <input id=\"last_name\" type=\"text\" name=\"last_name\"   value={surName}  onChange={e=> setSurName(e.target.value)}  required/>\n            </p>\n\n            <p>\n                    <label htmlFor=\"date_of_birth\">Interview Schedule Date </label>  \n                    <input id=\"date_of_birth\" type=\"date\" name=\"date_of_birth\"   value={dob}  onChange={e=>setDob(e.target.value)}  required/>\n            </p>\n\n                <p>\n                    <label htmlFor=\"age\">Phone Number </label>  \n                    <input id=\"age\" type=\"number\" name=\"age\" min=\"4\" max=\"11\"  value={age}  onChange={e=>setAge(e.target.value)} />\n                </p>\n\n                <p>\n                    <label htmlFor=\"id_number\">ID no</label> \n                    <input id=\"id_number\" type=\"number\" name=\"id_number\"  value={idNo}  onChange={e=> setIdNo(e.target.value)}  required/>\n                </p>\n\n                <p>\n                    <label htmlFor=\"cert_id\">Email </label> \n                    <input id=\"cert_id\" type=\"email\" name=\"email\"  placeholder=\"email\"  value={certNo}  onChange={e=>setCertNo(e.target.value)}  required/>\n                </p>\n\n                <p>\n                    <label htmlFor=\"aienabled\">Enable AI Assistance during interview </label>  \n                    <input id=\"aienabled\" type=\"checkbox\" name=\"aienabled\" checked={aienabled} value={aienabled} onChange={e=>setAiEnabled(e.target.value)} required/>\n                </p>\n\n       \n                <Button  variant=\"outlined\"   color=\"primary\" onClick={handleSubmit} >\n                    <Link  to=\"/dashboard/censusForm\" >Submit</Link> \n                </Button>\n            </form>\n        \n        </>\n    )\n}\n\nexport default CensusQA\n","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Census QA/CensusForm.js",["115","116","117","118","119","120","121","122","123","124"],"import React,{useState,useEffect} from 'react'\nimport Button from '@material-ui/core/Button';\nimport {Link} from \"react-router-dom\"\nimport \"./CensusForm.css\"\n\nfunction CensusForm() {\n\n    const [Q1,setQ1]= useState(0)\n    const [Q2,setQ2]= useState(\"\")\n    const [Q3,setQ3]= useState(0)\n    const [Q4,setQ4]= useState(0)\n    const [Q5,setQ5]= useState('')\n    const [Q6,setQ6]= useState('')\n    const [Q7,setQ7]= useState('')\n    const [Q8,setQ8]= useState(0)\n\n    const handleSubmit=()=>{\n        postData()\n    }\n\n    const postData=async()=>{\n        const body =  { Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8}\n        const response = await fetch(\"/count/dashboard/censusForm\",{\n            method :\"POST\",\n            headers : {\"Content-type\" : \"application/json\"},\n            body : JSON.stringify(body)\n        })\n    }\n\n    useEffect(()=>{\n        postData()\n    },[])\n    return (\n        <div>\n             <form className=\"census__Form\">\n            \n                    <p style={{ fontSize: '45px', justifyContent: 'center', display: 'flex', alignItems: 'center' }} className=\"centeredText\">\n                    Your interview has Successfully been scheduled...\n                    </p>\n                 \n                 <div className='button_org'>\n                    <Button   variant=\"outlined\"   color=\"primary\" onClick={handleSubmit}>\n                    <Link  to=\"/dashboard/calendarGoogleMeet\" >View My Calendar</Link> \n                    </Button>\n\n                    <Button   variant=\"outlined\"   color=\"primary\" onClick={handleSubmit}>\n                    <Link  to=\"/dashboard/meeting\" >Join Session</Link> \n                    </Button>\n    \n                    <Button   variant=\"outlined\"   color=\"primary\" onClick={handleSubmit}>\n                    <Link  to=\"/dashboard/censusQA\" >Back</Link> \n                    </Button>\n                    \n                 </div>\n\n            </form>\n        </div>\n    )\n}\n\nexport default CensusForm\n","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Footer/Footer.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Login__Registration/Dashboard/VoterModel/VoterModel.js",["125"],"import React,{useState} from 'react'\nimport \"./VoterModel.css\"\nimport FlareRoundedIcon from '@material-ui/icons/FlareRounded';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Footer from \"../../../Footer/Footer\"\nimport Button from '@material-ui/core/Button';\nimport {Link} from \"react-router-dom\"\nimport CensusQA from '../../../Census QA/CensusQA';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\n\nfunction VoterModel() {\n    const [checkbox,setCheckbox] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const checkBoxHandler=(event)=>{\n        setCheckbox(prevVal=>!prevVal);\n    }\n\n    const handleProceed =()=>{\n        setOpen(o => !o)\n    }\n\n    //handle popup model\n    const closeModal = () =>{\n        setOpen(false);\n    } \n \n    return (\n        <div  className=\"votermodel\">\n          <div className=\"message_info\">\n                <p>  <FlareRoundedIcon color=\"error\" fontSize=\"large\"/> {\"  \"} The purpose of this policy is to explain how we handle information \n                    we collect during the hiring web sites. This policy does \n                    not apply to third-party web sites that you are able to access from our web \n                    sites, nor does it cover other Sensitive information collection practices \n                    that do not happen on the Internet.We do not share personally identifiable \n                    information (name, address, e-mail address, social security number, or other \n                    personal unique identifiers) or business identifiable information on our web \n                    sites unless we specifically advise you that we are doing so.\n                </p>\n          </div>\n\n          <div>\n              <p>\n                   <b><u>1. DEFINITIONS: </u></b> In the context of this License Agreement, \"Allocate\" or \"Licensed Software\" \n                   refers to the proprietary software, demographic data files, and information contained on the media provided\n                    with this package or downloaded. The term \"Computer\" encompasses mainframe or personal computers, handheld\n                     computers, personal digital devices, and other apparatus capable of operating or accommodating the \n                     operation of Allocate. \"Copies\" pertain to the actual copies of all or any portion of Allocate, \n                     including backups, updates, merged or partial copies permitted herein or subsequently provided. \n                     \"Data\" specifically denotes the Hiring Management Summary Files 1-4 of the 2000 Recruiting data included\n                    with the Product. \"Related Materials\" encompasses all printed materials, non-Data content, and anything \n                    else in the package, accessed online, via electronic documentation, downloaded, or otherwise supplied by \n                    or from BOC or SRC for use with the Licensed Software. The term \"License\" represents the grant of limited \n                    rights to use and maintain the Licensed Software, Data, Copies, and Related Materials. Throughout this\n                     agreement, \"You\" or \"you\" refers to the Licensee. The \"Licensor\" is the BOC, subject to the rights of\n                      SRC in the Licensed Software. The provision of the Licensed Software and all Related Materials is \n                    subject to the terms and conditions outlined below.\n              </p>\n\n              <p>\n                 2. <b><u>LICENSE AND RESTRICTIONS.</u></b> The Licensed Software is licensed, not sold. In order to\n                preserve and protect its rights under applicable law, Licensor is not selling you ownership\n                rights to the Licensed Software. The BOC specifically retains title to all Data owned by it and\n                incorporated into the Licensed Software. SRC retains title to the Licensed Software, except for\n                the portions licensed to SRC by third parties, title to which portions is retained by those third\n                party owners. \n              </p>\n            <p>\n                Agree users Agreement <Checkbox   onClick={checkBoxHandler} checked={checkbox}/>\n                <Button \n                    variant=\"outlined\" \n                    color=\"primary\" \n                    onClick={handleProceed} \n                    disabled={checkbox === false ? true : false}\n                // >  <Link  to=\"/dashboard/censusQA\"    className={checkbox === false ? \"dis\" : \"ene\"}>Proceed</Link> </Button>\n                > Proceed</Button>\n            </p>\n\n            <Popup open={open} closeOnDocumentClick onClose={closeModal} >\n                <div id=\"close__model\">\n                    <a className=\"close\"  href=\"/dashboard\" onClick={closeModal}> &times; </a>\n                </div>\n                <div></div>\n                    <CensusQA />\n           </Popup>\n\n \n            <Footer />\n          </div>\n        </div>\n    )\n}\n\nexport default VoterModel\n","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/ScheduleMeeting/ScheduleMeeting.js",["126","127"],"\nimport React from 'react';\n import Button from '@material-ui/core/Button';\n import Siriwave from 'react-siriwave';\n import \"./ScheduleMeeting.css\"\n import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n import { toast } from 'react-toastify';\n import Microphone from \"../Assets/Microphone.png\"\n\n \n\nfunction ScheduleMeeting() {\n    // const [value, onChange] = useState<Value>(new Date());\n\n    const {\n        transcript,\n        listening,\n        resetTranscript,\n        browserSupportsSpeechRecognition\n      } = useSpeechRecognition();\n\n\n      if (!browserSupportsSpeechRecognition) {\n        return <span>Browser doesn't support speech recognition.</span>;\n      }\n\n      const onClickStop= async(e)=>{\n        e.preventDefault()\n        toast.success(\"Interview Meeting has been Scheduled Successfully!!!\")\n        console.log(\"Stop clicked\");\n       }\n\n    return (\n    <div className=\"siri_wave\">\n        <Siriwave style=\"ios\" color=\"#6adc92\" ratio={4} />\n        <Siriwave style=\"ios9\" color=\"#a390ff\" ratio={2} frequency={111} cover={true}/>  \n\n       <i>Please click on <b>Start</b> to Enable Speech Recognition Scheduling With AI.</i>\n       <div  className=\"microphone\">\n            <p>Microphone: {listening ? 'on' : 'off'}</p>\n            <img  src={Microphone} alt=\"Microphone icon\"/>\n        </div>\n      \n      <div className=\"speech_buttons\">\n        <Button   variant=\"outlined\"   color=\"primary\"  onClick={SpeechRecognition.startListening} > Start  </Button>\n        <Button   variant=\"outlined\"   color=\"primary\"  onClick={SpeechRecognition.stopListening} > Stop  </Button>\n        <Button   variant=\"outlined\"   color=\"primary\"  onClick={resetTranscript} > Reset  </Button>\n        <Button   variant=\"outlined\"   color=\"primary\"  onClick={onClickStop} > Done  </Button>\n        <Button   variant=\"outlined\"   color=\"primary\" >\n            <a href=\"https://calendar.google.com/calendar/u/0/r\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View Scheduled Meeting  </a>  \n        </Button>\n       </div>\n      <hr/>\n      <p>{transcript}</p>       \n \n    </div>\n    )\n}\n\nexport default ScheduleMeeting;","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/GoogleMeetCalendar/GoogleMeetCalendar.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Census QA/OnlineMeeting.js",["128","129"],"import React,{useState,useEffect} from 'react'\nimport { toast } from 'react-toastify';\nimport {Link} from \"react-router-dom\"\nimport Button from '@material-ui/core/Button';\nimport \"./OnlineMeeting.css\"\nimport FacialDetector from './FacialDetector';\nimport CallPage from \"../CallPage/CallPage\"\n\nfunction OnlineMeeting() {\n\n    const [name,setName]=useState(\"\") \n\n    const getName =async ()=>{\n        try {\n            const response = await fetch(\"/dashboard\",{\n                method :\"GET\",\n                headers : {token : localStorage.token },\n            })\n            const parseRes =  await response.json()\n            setName(parseRes.user_name)\n            console.log(parseRes);\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    const logout=(e)=>{\n        e.preventDefault()\n        localStorage.removeItem(\"token\")\n        // setAuth(false)\n        toast.dark(\"Logged out Successfully\")\n    }\n\n    useEffect(()=>{\n        getName()\n    },[])\n    return (\n        <div>\n            <div className='online_meeting'>\n                        <Button   variant=\"outlined\"   color=\"primary\" >\n                            <Link  to=\"/dashboard/censusForm\" >Back</Link> \n                        </Button>\n\n                        <button   className=\"btn btn-primary btn-block\" onClick={e=>logout(e)}><Link  to=\"/final\" style={{color : \"white\",textDecoration:\"none\",fontWeight:900}}>Log Out</Link> </button>\n                       \n            </div>\n\n           \n                <div className='googleMeet_container'>\n                    <CallPage />\n                </div>\n\n                <div className='online_meeting_frames'>\n                    {/* <div className=\"ai_gif\">\n                        <img alt=\"\" className=\"bg ma ou c embddd\" width=\"50\" height=\"50\" loading=\"lazy\" role=\"presentation\" src=\"https://miro.medium.com/v2/resize:fit:1000/1*YF4KdQE-RadFtNa6n66wdg.gif\"/>  \n                    </div> */}\n                    {/* <div className='facialdetector_container'>\n                        <FacialDetector /> \n                    </div> */}\n                    {/* <div className='meet_container_and_frames'>\n                    </div> */}\n            </div>\n          \n        </div>\n    )\n}\n\nexport default OnlineMeeting\n","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Census QA/FacialDetector.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/CallPage/CallPage.js",["130"],"import React, { useEffect, useReducer, useState } from \"react\";\nimport \"./CallPage.css\";\nimport CallPageFooter from \"./CallPageFooter/CallPageFooter\";\nimport CallPageHeader from \"./CallPageHeader/CallPageHeader\";\nimport MeetingInfo from \"./MeetingInfo/MeetingInfo\";\nimport Messenger from \"./Messenger/Messenger\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport MessageListReducer from \"../../components/Reducer/MessageListReducer\";\nimport Peer from \"simple-peer\";\nimport { postRequest, getRequest } from \"../utils/apiRequests\";\nimport { GET_CALL_ID, SAVE_CALL_ID } from \"../utils/apiEndPoints\";\nimport Alert from \"../UI/Alert/Alert\";\nimport io from \"socket.io-client\";\nimport FacialDetector from \"../Census QA/FacialDetector\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\n\nconst socket = io.connect(\"http://localhost:3002\");\n\nlet peer = null;\nconst initialState = [];\n\nfunction CallPage() {\n  const history = useHistory();\n  let { id } = useParams();\n  const [screenCastStream, setScreenCastStream] = useState();\n  const [isPresenting, setIsPresenting] = useState(false);\n  const [isMessenger, setIsMessenger] = useState(false);\n  const [isAudio, setIsAudio] = useState(true);\n  const [streamObj, setStreamObj] = useState();\n  const [messageAlert, setMessageAlert] = useState({});\n  const [meetingInfoPopup, setMeetingInfoPopup] = useState(false);\n  const [showVideo,setShowVideo]=useState(true)\n  let alertTimeout = null;\n  const [messageList, messageListReducer] = useReducer(\n    MessageListReducer,\n    initialState\n  );\n\n  const {\n    transcript,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  //check if user is admin\n  const isAdmin = window.location.hash === \"#init\" ? true : false;\n  const url = `${window.location.origin}${window.location.pathname}/shared`;\n\n\n\n  useEffect(() => {\n    SpeechRecognition.startListening();\n    if (isAdmin) {\n      setMeetingInfoPopup(true);\n    }\n\n    initWebRTC();\n\n    socket.on(\"code\", (data) => {\n      peer.signal(data);\n    });\n  }, [showVideo]);\n \n  const getReceiverCode = async () => {\n    // const res = await getRequest(`${BASE_URL}${GET_CALL_ID}/${id}`);\n    const res = await getRequest(`${GET_CALL_ID}/${id}`);\n    console.log(res)\n    if (res.code) {\n      peer.signal(res.code);\n    }\n  };\n\n  const initWebRTC = () => {\n    let video = document.querySelector(\"#videoElement\");\n    if (navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices\n        .getUserMedia({ video: showVideo, audio: true })\n        .then(function (stream) {\n          video.srcObject = stream;\n\n          setStreamObj(stream);\n\n          peer = new Peer({\n            initiator: isAdmin,\n            trickle: false,\n            stream: stream,\n          });\n\n          if (!isAdmin) {\n            getReceiverCode();\n          }\n\n          peer.on(\"signal\", async (data) => {\n            if (isAdmin) {\n              let payload = {\n                id,\n                signalData: data,\n              };\n              await postRequest(`${SAVE_CALL_ID}`, payload);\n            } else {\n              socket.emit(\"code\", data, (cbData) => {\n                console.log(\"code sent\");\n              });\n            }\n          });\n\n          peer.on(\"connect\", () => {\n            // wait for 'connect' event before using the data channel\n            console.log(\"Conected\")\n          });\n \n          peer.on(\"data\", (data) => {\n            clearTimeout(alertTimeout);\n            messageListReducer({\n              type: \"addMessage\",\n              payload: {\n                user: \"other\",\n                msg: data.toString(),\n                time: Date.now(),\n              },\n            });\n\n            setMessageAlert({\n              alert: true,\n              isPopup: true,\n              payload: {\n                user: \"other\",\n                msg: data.toString(),\n              },\n            });\n\n            alertTimeout = setTimeout(() => {\n              setMessageAlert({\n                ...messageAlert,\n                isPopup: false,\n                payload: {},\n              });\n            }, 10000);\n          });\n\n          peer.on(\"stream\", (stream) => {\n         ///   got remote video stream, now let's show it in a video tag\n            let video = document.querySelector(\"#videoElement\");\n            if (\"srcObject\" in video) {\n              video.srcObject = stream;\n            } else {\n              video.src = window.URL.createObjectURL(stream); // for older browsers\n            }\n            video.play();\n          });\n        })\n        .catch(function (error) {\n          console.log(\"Something went wrong!\",error.message);\n        });\n    }\n  };\n\n  const sendMsg = (msg) => {\n \n    peer.send(msg);  \n    // peer.on('connect', (msg) => {\n    //   console.log('I am connected now')\n    // }) \n\n    messageListReducer({\n      type: \"addMessage\",\n      payload: {\n        user: \"you\",\n        msg: msg,\n        time: Date.now(),\n      },\n    });\n\n  };\n\n  const screenShare = async() => {\n\n    var displayMediaOptions = {\n      video: {\n        cursor: \"always\"\n      },\n      audio: true\n    };\n\n    let video = document.querySelector(\"#videoElement\");\n    video.srcObject = await navigator.mediaDevices.getDisplayMedia(displayMediaOptions)\n    navigator.mediaDevices\n      .getDisplayMedia({ cursor: true })\n      .then((screenStream) => {\n        peer.replaceTrack(\n          streamObj.getVideoTracks()[0],\n          screenStream.getVideoTracks(),\n          streamObj\n        );\n        setScreenCastStream(screenStream);\n        screenStream.getTracks()[0].onended = () => {\n          peer.replaceTrack(\n            screenStream.getVideoTracks()[0],\n            streamObj.getVideoTracks()[0],\n            streamObj\n          );\n        };\n    \n        setIsPresenting(true);\n      });\n  };\n\n\n  const stopScreenShare = () => {\n    screenCastStream.getVideoTracks().forEach((track) => {\n      track.stop();\n    });\n    peer.replaceTrack(\n      screenCastStream.getVideoTracks()[0],\n      streamObj.getVideoTracks()[0],\n      streamObj\n    );\n\n    setIsPresenting(false);\n  };\n\n  const toggleAudio = (value) => {\n    streamObj.getAudioTracks()[0].enabled = value;\n    setIsAudio(value);\n  };\n\n  const disableVideo=async()=>{\n    setShowVideo(prev=>!showVideo);\n   console.log(\"disabled video call\")\n  }\n\n  const disconnectCall = () => {\n    peer.destroy();\n    history.push(\"/\");\n    window.location.reload();\n  };\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n\n  return (\n    <div className=\"CallPage\" >\n      {/* <video\n        className=\"Video__Container\"\n        src=\"\"\n        type=\"video/mp4\"\n        autoPlay={true}\n        id=\"videoElement\"\n        controls\n      ></video> */}\n      <CallPageHeader\n        isMessenger={isMessenger}\n        setIsMessenger={setIsMessenger}\n        messageAlert={messageAlert}\n        setMessageAlert={setMessageAlert}\n      />\n       <div className='online_meeting_frames'>\n           <div className='facialdetector_container' onClick={SpeechRecognition.startListening}>\n                  <FacialDetector /> \n           </div>\n           <div className=\"gpp\">\n            <div className=\"ai_gif\">\n                  <img alt=\"\" onClick={resetTranscript} className=\"bg ma ou c embddd\" width=\"300\" height=\"300\" loading=\"lazy\" role=\"presentation\" src=\"https://miro.medium.com/v2/resize:fit:1000/1*YF4KdQE-RadFtNa6n66wdg.gif\"/>  \n              </div> \n              <div className=\"meeting_link_box\">\n                <MeetingInfo setMeetingInfoPopup={setMeetingInfoPopup} url={url} onClick={SpeechRecognition.startListening}/>\n              </div>\n           </div>\n       </div>\n\n       <p className=\"transcript_txt\">{transcript}</p>   \n\n      <CallPageFooter\n       disableVideo={disableVideo}\n       showVideo={showVideo}\n        isPresenting={isPresenting}\n        stopScreenShare={stopScreenShare}\n        screenShare={screenShare}\n        toggleAudio={toggleAudio}\n        disconnectCall={disconnectCall}\n        isAudio={isAudio}\n      />\n      {isAdmin && meetingInfoPopup && (\n        <MeetingInfo setMeetingInfoPopup={setMeetingInfoPopup} url={url} />\n      )}\n      {isMessenger ? (\n        <Messenger\n          setIsMessenger={setIsMessenger}\n          sendMsg={sendMsg}\n          messageList={messageList}\n        />\n      ) : (\n        messageAlert.isPopup && <Alert messageAlert={messageAlert} />\n      )}\n\n      \n    </div>\n  );\n}\n\nexport default CallPage;\n","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/CallPage/CallPageFooter/CallPageFooter.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/CallPage/CallPageHeader/CallPageHeader.js",["131"],"import React, { useEffect, useState } from 'react'\nimport \"./CallPageHeader.css\";\nimport GroupIcon from '@material-ui/icons/Group';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport {formatDate} from \"../../utils/helpers\"\n\n\nfunction CallPageHeader( {isMessenger , setIsMessenger,setMessageAlert,messageAlert}) {\n\n    let interval = null;\n    const [currentTime,setCurrentTime]=useState(()=>{\n        return  formatDate()\n    })\n\n    useEffect(()=>{\n        interval = setInterval(()=>setCurrentTime(formatDate()),1000 * 60);\n        return()=>{\n            clearInterval(interval)\n        }\n    })\n    return (\n        <div className=\"CallPageHeader\">\n            <div className=\"header__items icon__block\">\n                <GroupIcon className=\"icon\" />\n            </div>\n            <div className=\"header__items icon__block\" onClick={()=>{\n                setIsMessenger(true)\n                setMessageAlert({})\n            }}>\n                <ChatIcon   className=\"icon\"  />\n                {isMessenger && messageAlert.alert && (\n                    <span className=\"alert__alert__icon\"></span>\n                )}\n            </div>\n\n            <div className=\"header__items date__block\">\n                {currentTime}\n            </div>\n\n            <div className=\"header__items icon__block\">\n                <AccountCircleIcon    className=\"icon profile\" />\n            </div> \n        </div>\n    )\n}  \n\nexport default CallPageHeader\n","/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/CallPage/MeetingInfo/MeetingInfo.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/CallPage/Messenger/Messenger.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/Reducer/MessageListReducer.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/utils/apiRequests.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/utils/apiEndPoints.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/utils/helpers.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/UI/Alert/Alert.js",[],"/Applications/My Projects/AI Powered Hiring Management System/frontend/src/components/SharedMeetingPage/SharedMeeting.js",["132"],"import React, { useEffect, useReducer, useState } from \"react\";\nimport \"./SharedMeeting.css\"\nimport CallPageHeader from '../CallPage/CallPageHeader/CallPageHeader'\nimport CallPageFooter from '../CallPage/CallPageFooter/CallPageFooter'\nimport { useHistory, useParams } from \"react-router-dom\";\nimport MessageListReducer from \"../Reducer/MessageListReducer\";\nimport { postRequest, getRequest } from \"../utils/apiRequests\";\nimport { GET_CALL_ID, SAVE_CALL_ID } from \"../utils/apiEndPoints\";\nimport Alert from \"../UI/Alert/Alert\";\nimport io from \"socket.io-client\";\nimport MeetingInfo from \"../CallPage/MeetingInfo/MeetingInfo\";\nimport Messenger from \"../CallPage/Messenger/Messenger\";\nimport Peer from \"simple-peer\";\n\n\nfunction SharedMeeting() {\n    const socket = io.connect(\"http://localhost:3002\");\n\n    let peer = null;\n    const initialState = [];\n    const history = useHistory();\n    let { id } = useParams();\n    const [screenCastStream, setScreenCastStream] = useState();\n    const [isPresenting, setIsPresenting] = useState(false);\n    const [isMessenger, setIsMessenger] = useState(false);\n    const [isAudio, setIsAudio] = useState(true);\n    const [streamObj, setStreamObj] = useState();\n    const [messageAlert, setMessageAlert] = useState({});\n    const [meetingInfoPopup, setMeetingInfoPopup] = useState(false);\n    const [showVideo,setShowVideo]=useState(true)\n    let alertTimeout = null;\n    const [messageList, messageListReducer] = useReducer(\n      MessageListReducer,\n      initialState\n    );\n\n\n    const isAdmin = window.location.hash === \"#init\" ? true : false;\n  const url = `${window.location.origin}${window.location.pathname}/shared`;\n\n\n\n  useEffect(() => {\n    if (isAdmin) {\n      setMeetingInfoPopup(true);\n    }\n\n    initWebRTC();\n\n    socket.on(\"code\", (data) => {\n      peer.signal(data);\n    });\n  }, [showVideo]);\n \n  const getReceiverCode = async () => {\n    // const res = await getRequest(`${BASE_URL}${GET_CALL_ID}/${id}`);\n    const res = await getRequest(`${GET_CALL_ID}/${id}`);\n    console.log(res)\n    if (res.code) {\n      peer.signal(res.code);\n    }\n  };\n\n  const initWebRTC = () => {\n    let video = document.querySelector(\"#videoElement\");\n    if (navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices\n        .getUserMedia({ video: showVideo, audio: true })\n        .then(function (stream) {\n          video.srcObject = stream;\n\n          setStreamObj(stream);\n\n          peer = new Peer({\n            initiator: isAdmin,\n            trickle: false,\n            stream: stream,\n          });\n\n          if (!isAdmin) {\n            getReceiverCode();\n          }\n\n          peer.on(\"signal\", async (data) => {\n            if (isAdmin) {\n              let payload = {\n                id,\n                signalData: data,\n              };\n              await postRequest(`${SAVE_CALL_ID}`, payload);\n            } else {\n              socket.emit(\"code\", data, (cbData) => {\n                console.log(\"code sent\");\n              });\n            }\n          });\n\n          peer.on(\"connect\", () => {\n            // wait for 'connect' event before using the data channel\n            console.log(\"Conected\")\n          });\n \n          peer.on(\"data\", (data) => {\n            clearTimeout(alertTimeout);\n            messageListReducer({\n              type: \"addMessage\",\n              payload: {\n                user: \"other\",\n                msg: data.toString(),\n                time: Date.now(),\n              },\n            });\n\n            setMessageAlert({\n              alert: true,\n              isPopup: true,\n              payload: {\n                user: \"other\",\n                msg: data.toString(),\n              },\n            });\n\n            alertTimeout = setTimeout(() => {\n              setMessageAlert({\n                ...messageAlert,\n                isPopup: false,\n                payload: {},\n              });\n            }, 10000);\n          });\n\n          peer.on(\"stream\", (stream) => {\n         ///   got remote video stream, now let's show it in a video tag\n            let video = document.querySelector(\"#videoElement\");\n            if (\"srcObject\" in video) {\n              video.srcObject = stream;\n            } else {\n              video.src = window.URL.createObjectURL(stream); // for older browsers\n            }\n            video.play();\n          });\n        })\n        .catch(function (error) {\n          console.log(\"Something went wrong!\",error.message);\n        });\n    }\n  };\n\n  const sendMsg = (msg) => {\n \n    peer.send(msg);  \n    // peer.on('connect', (msg) => {\n    //   console.log('I am connected now')\n    // }) \n\n    messageListReducer({\n      type: \"addMessage\",\n      payload: {\n        user: \"you\",\n        msg: msg,\n        time: Date.now(),\n      },\n    });\n\n  };\n\n  const screenShare = async() => {\n\n    var displayMediaOptions = {\n      video: {\n        cursor: \"always\"\n      },\n      audio: true\n    };\n\n    let video = document.querySelector(\"#videoElement\");\n    video.srcObject = await navigator.mediaDevices.getDisplayMedia(displayMediaOptions)\n    navigator.mediaDevices\n      .getDisplayMedia({ cursor: true })\n      .then((screenStream) => {\n        peer.replaceTrack(\n          streamObj.getVideoTracks()[0],\n          screenStream.getVideoTracks(),\n          streamObj\n        );\n        setScreenCastStream(screenStream);\n        screenStream.getTracks()[0].onended = () => {\n          peer.replaceTrack(\n            screenStream.getVideoTracks()[0],\n            streamObj.getVideoTracks()[0],\n            streamObj\n          );\n        };\n    \n        setIsPresenting(true);\n      });\n  };\n\n\n  const stopScreenShare = () => {\n    screenCastStream.getVideoTracks().forEach((track) => {\n      track.stop();\n    });\n    peer.replaceTrack(\n      screenCastStream.getVideoTracks()[0],\n      streamObj.getVideoTracks()[0],\n      streamObj\n    );\n\n    setIsPresenting(false);\n  };\n\n  const toggleAudio = (value) => {\n    streamObj.getAudioTracks()[0].enabled = value;\n    setIsAudio(value);\n  };\n\n  const disableVideo=async()=>{\n    setShowVideo(prev=>!showVideo);\n   console.log(\"disabled video call\")\n  }\n\n  const disconnectCall = () => {\n    peer.destroy();\n    history.push(\"/\");\n    window.location.reload();\n  };\n\n\n    return (\n        <div className=\"CallPage\" >\n         <video\n          className=\"Video__Container\"\n          src=\"\"\n          type=\"video/mp4\"\n          autoPlay={true}\n          id=\"videoElement\"\n          controls\n        ></video>  \n        <CallPageHeader\n          isMessenger={isMessenger}\n          setIsMessenger={setIsMessenger}\n          messageAlert={messageAlert}\n          setMessageAlert={setMessageAlert}\n        />\n\n            <div className=\"meeting_link_box\">\n                  <MeetingInfo setMeetingInfoPopup={setMeetingInfoPopup} url={url} />\n                </div>\n         \n  \n          \n  \n        <CallPageFooter\n         disableVideo={disableVideo}\n         showVideo={showVideo}\n          isPresenting={isPresenting}\n          stopScreenShare={stopScreenShare}\n          screenShare={screenShare}\n          toggleAudio={toggleAudio}\n          disconnectCall={disconnectCall}\n          isAudio={isAudio}\n        />\n        {isAdmin && meetingInfoPopup && (\n          <MeetingInfo setMeetingInfoPopup={setMeetingInfoPopup} url={url} />\n        )}\n        {isMessenger ? (\n          <Messenger\n            setIsMessenger={setIsMessenger}\n            sendMsg={sendMsg}\n            messageList={messageList}\n          />\n        ) : (\n          messageAlert.isPopup && <Alert messageAlert={messageAlert} />\n        )}\n  \n        \n      </div>\n    )\n}\n\nexport default SharedMeeting\n",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":23,"column":15,"nodeType":"139","messageId":"140","endLine":23,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":32,"column":7,"nodeType":"143","endLine":32,"endColumn":9,"suggestions":"144"},{"ruleId":"137","severity":1,"message":"145","line":8,"column":15,"nodeType":"139","messageId":"140","endLine":8,"endColumn":20},{"ruleId":"137","severity":1,"message":"146","line":9,"column":15,"nodeType":"139","messageId":"140","endLine":9,"endColumn":20},{"ruleId":"137","severity":1,"message":"147","line":10,"column":15,"nodeType":"139","messageId":"140","endLine":10,"endColumn":20},{"ruleId":"137","severity":1,"message":"148","line":11,"column":15,"nodeType":"139","messageId":"140","endLine":11,"endColumn":20},{"ruleId":"137","severity":1,"message":"149","line":12,"column":15,"nodeType":"139","messageId":"140","endLine":12,"endColumn":20},{"ruleId":"137","severity":1,"message":"150","line":13,"column":15,"nodeType":"139","messageId":"140","endLine":13,"endColumn":20},{"ruleId":"137","severity":1,"message":"151","line":14,"column":15,"nodeType":"139","messageId":"140","endLine":14,"endColumn":20},{"ruleId":"137","severity":1,"message":"152","line":15,"column":15,"nodeType":"139","messageId":"140","endLine":15,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":23,"column":15,"nodeType":"139","messageId":"140","endLine":23,"endColumn":23},{"ruleId":"141","severity":1,"message":"153","line":32,"column":7,"nodeType":"143","endLine":32,"endColumn":9,"suggestions":"154"},{"ruleId":"137","severity":1,"message":"155","line":7,"column":9,"nodeType":"139","messageId":"140","endLine":7,"endColumn":13},{"ruleId":"156","severity":1,"message":"157","line":35,"column":19,"nodeType":"158","messageId":"159","endLine":35,"endColumn":30},{"ruleId":"156","severity":1,"message":"157","line":36,"column":19,"nodeType":"158","messageId":"159","endLine":36,"endColumn":31},{"ruleId":"137","severity":1,"message":"160","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":22},{"ruleId":"137","severity":1,"message":"161","line":11,"column":12,"nodeType":"139","messageId":"140","endLine":11,"endColumn":16},{"ruleId":"141","severity":1,"message":"162","line":63,"column":6,"nodeType":"143","endLine":63,"endColumn":17,"suggestions":"163"},{"ruleId":"141","severity":1,"message":"164","line":17,"column":20,"nodeType":"165","endLine":17,"endColumn":75},{"ruleId":"141","severity":1,"message":"166","line":53,"column":6,"nodeType":"143","endLine":53,"endColumn":17,"suggestions":"167"},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postDetails'. Either include it or remove the dependency array.","ArrayExpression",["170"],"'setQ1' is assigned a value but never used.","'setQ2' is assigned a value but never used.","'setQ3' is assigned a value but never used.","'setQ4' is assigned a value but never used.","'setQ5' is assigned a value but never used.","'setQ6' is assigned a value but never used.","'setQ7' is assigned a value but never used.","'setQ8' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postData'. Either include it or remove the dependency array.",["171"],"'Link' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","'FacialDetector' is defined but never used.","'name' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initWebRTC' and 'isAdmin'. Either include them or remove the dependency array.",["172"],"Assignments to the 'interval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has missing dependencies: 'initWebRTC', 'isAdmin', 'peer', and 'socket'. Either include them or remove the dependency array.",["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [postDetails]",{"range":"182","text":"183"},"Update the dependencies array to be: [postData]",{"range":"184","text":"185"},"Update the dependencies array to be: [initWebRTC, isAdmin, showVideo]",{"range":"186","text":"187"},"Update the dependencies array to be: [initWebRTC, isAdmin, peer, showVideo, socket]",{"range":"188","text":"189"},[966,968],"[postDetails]",[856,858],"[postData]",[2082,2093],"[initWebRTC, isAdmin, showVideo]",[1835,1846],"[initWebRTC, isAdmin, peer, showVideo, socket]"]